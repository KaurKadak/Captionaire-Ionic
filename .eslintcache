[{"C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\App.tsx":"1","C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\constants\\constants.js":"2","C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\serviceWorker.ts":"3","C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\firebaseConfig.tsx":"4","C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\index.tsx":"5"},{"size":7266,"mtime":1606748022929,"results":"6","hashOfConfig":"7"},{"size":42,"mtime":1606079979208,"results":"8","hashOfConfig":"7"},{"size":5213,"mtime":1591146835000,"results":"9","hashOfConfig":"7"},{"size":565,"mtime":1591563624981,"results":"10","hashOfConfig":"7"},{"size":430,"mtime":1591146835000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"jk9xvy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\App.tsx",["23","24","25","26"],"import React, { useState, useRef } from \"react\";\nimport { ALL_COUNTS } from \"./constants/constants\";\nimport {\n  IonApp,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  IonButton,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonSegment,\n  IonSegmentButton,\n  IonIcon,\n  IonCard,\n  IonCardContent,\n  IonToggle,\n  IonText,\n  IonImg,\n  IonAlert,\n} from \"@ionic/react\";\n\nimport firebase from \"./firebaseConfig\";\n\nimport {\n  heartOutline,\n  flameOutline,\n  peopleCircleOutline,\n} from \"ionicons/icons\";\n\nimport { AdOptions, AdSize, AdPosition, AdMobPlugin } from \"capacitor-admob\";\n\nimport { Plugins } from \"@capacitor/core\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\n/* Custom styling */\nimport \"./styles/styles.css\";\nimport logo from \"./images/logo.svg\";\n\nconst App: React.FC = () => {\n  const [quote, setQuote] = useState(\"...\");\n  const [author, setAuthor] = useState();\n  const [authorized, setAuthorized] = useState(false);\n  const [currentTypeCount, setCurrentTypeCount] = useState(0);\n  const [authorHidden, setAuthorHidden] = useState(true);\n  const [captionType, setCaptionType] = useState(null);\n  const [showAlert1, setShowAlert1] = useState(false);\n\n  const { Clipboard } = Plugins;\n  const AdMob = Plugins.AdMob as AdMobPlugin;\n\n  const captionTypes: string[] = [\"romantic\", \"motivational\", \"funny\"];\n\n  const showTabBanner = () => {\n    const options: AdOptions = {\n      isTesting: true,\n      adId: \"ca-app-pub-9214368890231884/4469593432\",\n      position: AdPosition.BOTTOM_CENTER,\n      adSize: AdSize.SMART_BANNER,\n    };\n\n    AdMob.showBanner(options).then(\n      (value) => {\n        console.log(value); // true\n      },\n      (error) => {\n        console.error(error); // show error\n      }\n    );\n  };\n\n  const loadQuote = () => {\n    // Ask for quote from backend\n    const dbref = firebase\n      .database()\n      .ref(\"captions/\" + captionType + \"/\" + getRandomInt(currentTypeCount));\n\n    dbref.on(\"value\", function (snapshot) {\n      setQuote(snapshot.val().text);\n      setAuthor(snapshot.val().from);\n    });\n    console.log(\"QUOTE ASKED\");\n  };\n\n  const loadData = () => {\n    if (firebase.auth().currentUser) {\n      loadQuote();\n    } else {\n      // Authorize user anonymously\n      firebase\n        .auth()\n        .signInAnonymously()\n        .then(() => {})\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n        });\n\n      setAuthorized(true);\n    }\n  };\n\n  const copyToClipboard = (quote: string, quoteAuthor: string) => {\n    let textToCopy: string;\n\n    if (authorHidden) {\n      textToCopy = quote;\n    } else {\n      textToCopy = '\"' + quote + '\"' + \" - \" + quoteAuthor;\n    }\n\n    Clipboard.write({\n      string: textToCopy,\n    });\n\n    setShowAlert1(true);\n  };\n\n  function getRandomInt(max: number) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  AdMob.initialize({ appId: \"ca-app-pub-9214368890231884~7095756774\" });\n  showTabBanner();\n\n  return (\n    <IonApp>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonImg className=\"logo-img\" src={logo} />\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <div className=\"center wide\">\n              <div className=\"choices\">\n                <div className=\"center wide\">\n                  <p>Choose caption type :</p>\n                </div>\n\n                <IonSegment\n                  color=\"tertiary\"\n                  onIonChange={(e) => {\n                    setCaptionType(e.detail.value);\n                    if (e.detail.value === captionTypes[0]) {\n                      setCurrentTypeCount(ALL_COUNTS[0]);\n                    } else if (e.detail.value === captionTypes[1]) {\n                      setCurrentTypeCount(ALL_COUNTS[1]);\n                    } else {\n                      setCurrentTypeCount(ALL_COUNTS[2]);\n                    }\n                  }}\n                >\n                  <IonSegmentButton\n                    value={captionTypes[0]}\n                    style={{ fontSize: \"13px\" }}\n                  >\n                    <IonLabel>Romantic</IonLabel>\n                    <IonIcon icon={heartOutline}></IonIcon>\n                  </IonSegmentButton>\n                  <IonSegmentButton\n                    value={captionTypes[1]}\n                    style={{ fontSize: \"13px\" }}\n                  >\n                    <IonLabel>Motivational</IonLabel>\n                    <IonIcon icon={flameOutline}></IonIcon>\n                  </IonSegmentButton>\n                  <IonSegmentButton\n                    value={captionTypes[2]}\n                    style={{ fontSize: \"13px\" }}\n                  >\n                    <IonLabel>Funny</IonLabel>\n                    <IonIcon icon={peopleCircleOutline}></IonIcon>\n                  </IonSegmentButton>\n                </IonSegment>\n              </div>\n            </div>\n          </IonRow>\n\n          <IonRow>\n            <IonCol>\n              <IonButton\n                className=\"wide\"\n                onClick={loadData}\n                disabled={captionType === null}\n              >\n                {authorized ? \"Generate\" : \"Start session\"}\n              </IonButton>\n            </IonCol>\n          </IonRow>\n\n          <IonRow className=\"ion-justify-content-center\">\n            <IonCard color=\"light\">\n              <IonCardContent className=\"ion-text-capitalize\">\n                <IonText color=\"dark\">\n                  <h2>{quote}</h2>\n                </IonText>\n                <IonText color=\"medium\" hidden={authorHidden}>\n                  - {author}\n                </IonText>\n              </IonCardContent>\n            </IonCard>\n          </IonRow>\n\n          <IonRow className=\"ion-justify-content-end\">\n            <div className=\"author-box\">\n              <IonLabel>Author</IonLabel>\n              <IonToggle\n                name=\"author\"\n                color=\"primary\"\n                checked={!authorHidden}\n                onIonChange={(e) => setAuthorHidden(!authorHidden)}\n              ></IonToggle>\n            </div>\n          </IonRow>\n\n          <IonRow>\n            <div className=\"button-container\">\n              <IonButton onClick={() => copyToClipboard(quote, author)}>\n                Copy Caption\n              </IonButton>\n            </div>\n          </IonRow>\n        </IonGrid>\n\n        <IonAlert\n          isOpen={showAlert1}\n          onDidDismiss={() => setShowAlert1(false)}\n          header={\"Success\"}\n          message={\"Caption copied to clipboard\"}\n          buttons={[\"OK\"]}\n          cssClass={\"alert-bg\"}\n        />\n      </IonContent>\n    </IonApp>\n  );\n};\n\nexport default App;\n","C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\constants\\constants.js",[],"C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\serviceWorker.ts",[],"C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\firebaseConfig.tsx",[],"C:\\Users\\Kaur\\Desktop\\Personal Projects\\IG Captions\\ig-captionator\\src\\index.tsx",[],{"ruleId":"27","severity":1,"message":"28","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":33},{"ruleId":"27","severity":1,"message":"31","line":114,"column":15,"nodeType":"29","messageId":"30","endLine":114,"endColumn":24},{"ruleId":"27","severity":1,"message":"32","line":115,"column":15,"nodeType":"29","messageId":"30","endLine":115,"endColumn":27},{"ruleId":"33","severity":1,"message":"34","line":128,"column":38,"nodeType":"35","messageId":"36","endLine":128,"endColumn":39},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]